#!/bin/env lace

# Take a file with pairs of people in it,
# and a username/fullname file which has a specific order to it,
# and output a special ordered format with a uni-directional relationship
# for each pair (one person's line references the other person's but
# not vice-versa).

# To see it in action, run
#   ./pair-up.lace < pairs

$(H name-file)
names
$(H name-file)

$(H allnames-file)
allnames
$(H allnames-file)

$(H wrong-section-file)
wrong-section
$(H wrong-section-file)

# Break the pairs file into a useful format of lines:
#   tag name
# where /tag/ is
#   0 - Worked alone.
#   1 - Worked with a partner.
#   2 - Worked as a partner (did not submit on this person's computer).
# and /name/ is the student's real name (as they typed during submit).
$(H split-script)
s/^ *\(.*[^ ]\) *worked with *\(.*[^ ]\) *(.*$/1\t\1\n2\t\2/
s/^ *\(.*[^ ]\) *worked alone.*$/0\t\1/
$(H split-script)
 $(O a) sed -f $(HF split-script)

# Split /tag/ and /name/ columns as described above.
# They will be pasted back together later.
$(XO a) tee $(OF tags)
$(XO tags) cut -f1
$(XO a) cut -f2

 $(O name-table) cat $(H allnames-file)
# Reorder names to "First Last" instead of "Last, First".
$(XO name-table) sed -e 's/\t\(.*\), \(.*\)$/\t\2 \1/'
# Fuzzy match for each student in the pairs file.
$(XO a) best-match $(XF name-table)
# Only want the username of each match.
$(XO a) cut -f1

# Paste /tag/ and /name/ columns back together.
$(XO a) paste $(XF tags) -

# Here is where the actual pairing happens.
# Partners are listed contiguously in the input stream,
# so the Partner #1 students are one line before their
# corresponding Partner #2.
# Add the name of Partner #1 to the end of the Partner #2 line.
$(H pair-up)
BEGIN { FS = "\t"; }

{
    role = $1;
    username = $2;
    if (role == 1)  next_partner = username;
    if (role == 2)  partner = next_partner;
    else            partner = "";
    printf "%s\t* %-12s\n", username, partner;
}
$(H pair-up)
$(XO a) awk $(H pair-up)

# Add the student's full name to the end of the line.
# This also introduces students who did not attend lab as lines without '*'.
$(XO a) ujoin $(H name-file) - -l -p ' ' -nomatch $(H wrong-section-file)



# Re-order and print columns.
$(XO a) sed -e 's/\(.*\)\t\(.*\)\t\(.*\)/\2\t\1\t\3/'
$(X a) expand -t 15,26

