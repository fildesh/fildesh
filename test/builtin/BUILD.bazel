load("//tool:comparispawn.bzl", "fildesh_expect_test")
load("//tool/bazel:fildesh.bzl", "fildesh_test")
load("//tool/bazel:spawn.bzl", "spawn_test")

#### add

cc_test(
    name = "add_float_test",
    srcs = ["add_float_test.c", "//src/builtin:add.c"],
    deps = ["//:fildesh_lib", "//:fildesh_tool_lib"],
    defines = ["FILDESH_BUILTIN_LIBRARY"],
)

#### bestmatch

cc_test(
    name = "bestmatch_test",
    srcs = ["bestmatch_test.c"],
    deps = ["//:fildesh_lib", "//:fildesh_tool_lib"],
    data = ["//src/builtin:bestmatch"],
    args = ["$(location //src/builtin:bestmatch)"],
)

fildesh_test(
    name = "bestmatch_edge_test",
    srcs = ["bestmatch_edge_test.fildesh"],
)

#### cmp

spawn_test(
    name = "cmp_equal_test",
    binary = "//src/builtin:cmp",
    args = [
        "$(location :hello_newline.txt)",
        "$(location :hello_newline.txt)",
        "-o", "-",
    ],
    data = [
        ":hello_newline.txt",
    ],
)
spawn_test(
    name = "cmp_diff_test",
    expect_failure = True,
    binary = "//src/builtin:cmp",
    args = [
        "-o", "-",
        "$(location :hello_newline.txt)",
        "$(location :hello_newline_x2.txt)",
    ],
    data = [
        ":hello_newline.txt",
        ":hello_newline_x2.txt",
    ],
)

#### elastic

fildesh_expect_test(
    name = "elastic_cat_test",
    srcs = ["elastic_cat.fildesh"],
    expect = ":hello_newline.txt",
)

fildesh_expect_test(
    name = "elastic_tee_test",
    srcs = ["elastic_tee.fildesh"],
    expect = ":hello_newline_x2.txt",
)

cc_test(
    name = "elastic_aio_tee_test",
    srcs = ["elastic_alt_tee_test.c"],
    deps = ["//:fildesh_lib", "//:fildesh_tool_lib"],
    data = ["//src:elastic_aio"],
    args = ["$(location //src:elastic_aio)"],
)
cc_test(
    name = "elastic_poll_tee_test",
    srcs = ["elastic_alt_tee_test.c"],
    deps = ["//:fildesh_lib", "//:fildesh_tool_lib"],
    data = ["//src:elastic_poll"],
    args = ["$(location //src:elastic_poll)"],
)
cc_test(
    name = "elastic_pthread_tee_test",
    srcs = ["elastic_alt_tee_test.c"],
    deps = ["//:fildesh_lib", "//:fildesh_tool_lib"],
    data = ["//src/builtin:elastic_pthread"],
    args = ["$(location //src/builtin:elastic_pthread)"],
)

#### execfd

cc_test(
    name = "execfd_test",
    srcs = [
        "execfd_test.c",
        "//src/builtin:fildesh_builtin.h",
        "//src:execfd.c",
    ],
    defines = ["UNIT_TESTING"],
    deps = ["//:fildesh_lib", "//:fildesh_tool_lib"],
    data = ["//src/builtin:zec"],
    args = ["$(location //src/builtin:zec)"],
)

cc_test(
    name = "execfd_cat_test",
    srcs = [
        "execfd_cat_test.c",
        "//src/builtin:fildesh_builtin.h",
        "//src:execfd.c",
    ],
    defines = ["UNIT_TESTING"],
    deps = ["//:fildesh_lib", "//:fildesh_tool_lib"],
    data = ["//tool:shout"],
    args = ["$(location //tool:shout)"],
)

fildesh_test(
    name = "execfd_script_test",
    srcs = ["execfd_script_test.fildesh"],
    args = ["$(location //src/builtin:zec)"],
    data = ["//src/builtin:zec"],
)

#### expect_failure

cc_test(
    name = "expect_failure_test",
    srcs = [
        "expect_failure_test.c",
        "//src/builtin:expect_failure.c",
        "//src/builtin:fildesh_builtin.h",
    ],
    defines = ["UNIT_TESTING"],
    deps = ["//:fildesh_lib"],
    data = [
        ":hello_newline.txt",
        "//test/expect:literal_0.txt",
        "//test/expect:literal_127.txt",
    ],
    args = [
        "$(location //test/expect:literal_0.txt)",
        "$(location //test/expect:literal_127.txt)",
        "$(location :hello_newline.txt)",
    ],
)

#### fildesh

spawn_test(
    name = "fildesh_as_add_test",
    binary = "//tool:comparispawn",
    args = [
        "$(location summed_integers.txt)",
        "$(location //:fildesh)",
        "-stdin",
        "$(location integers.txt)",
        "-as",
        "add",
    ],
    data = [
        "integers.txt",
        "summed_integers.txt",
        "//:fildesh",
    ],
)

cc_test(
    name = "fildesh_cli_hello_test",
    srcs = ["fildesh_cli_hello_test.c"],
    deps = ["//:fildesh_lib", "//:fildesh_tool_lib"],
    data = ["//:fildesh"],
    args = ["$(location //:fildesh)"],
)

cc_test(
    name = "fildesh_usage_test",
    srcs = ["fildesh_usage_test.c"],
    deps = ["//:fildesh_compat_lib"],
    data = ["//:fildesh"],
    args = ["$(location //:fildesh)"],
)

#### godo

cc_test(
    name = "godo_test",
    srcs = [
        "godo_test.c",
        "//src:godo.c",
    ],
    defines = ["FILDESH_BUILTIN_LIBRARY"],
    deps = [
        "//:fildesh_lib",
    ],
    data = [
        "hello_newline.txt",
        "//tool:expectish",
    ],
    args = [
        "$(location //tool:expectish)",
        "$(location hello_newline.txt)",
    ],
)

#### oargz

cc_test(
    name = "oargz_test",
    srcs = [
        "oargz_test.c",
        "//src/builtin:fildesh_builtin.h",
        "//src/builtin:oargz.c",
    ],
    defines = ["FILDESH_BUILTIN_LIBRARY"],
    deps = [
        "//:fildesh_lib",
        "//:fildesh_tool_lib",
    ],
)

#### replace_string
fildesh_test(
    name = "replace_string_test",
    srcs = ["replace_string_test.fildesh"],
)

#### sponge

sh_test(
    name = "sponge_sh_test",
    srcs = ["sponge_test.sh"],
    args = ["$(location //src/builtin:sponge)"],
    data = ["//src/builtin:sponge"],
    target_compatible_with = select({
        "@platforms//os:windows": ["@platforms//:incompatible"],
        "//conditions:default": [],
    }),
)

#### sshall

cc_binary(
    name = "echocat",
    srcs = [
        "echocat.c",
        "//src/builtin:zec.c",
    ],
    deps = ["//:fildesh_lib"],
    defines = ["FILDESH_BUILTIN_LIBRARY"],
    testonly = True,
)
fildesh_test(
    name = "echocat_test",
    srcs = ["echocat_test.fildesh"],
    aliases = {"echocat": ":echocat"}
)

cc_test(
    name = "sshall_test",
    srcs = ["sshall_test.c"],
    deps = ["//:fildesh_lib", "//:fildesh_tool_lib"],
    data = [
        ":echocat",
        "//src:sshall",
    ],
    args = [
        "$(location //src:sshall)",
        "$(location :echocat)"
    ],
)

#### time2sec

cc_test(
    name = "time2sec_test",
    srcs = [
        "time2sec_test.c",
        "//src/builtin:time2sec.c",
    ],
    defines = ["FILDESH_BUILTIN_LIBRARY"],
    deps = [
        "//:fildesh_lib",
        "//:fildesh_tool_lib",
    ],
)

#### transpose

cc_test(
    name = "transpose_test",
    srcs = [
        "transpose_test.c",
        "//src/builtin:transpose.c",
        "//src/builtin:fildesh_builtin.h",
    ],
    defines = ["FILDESH_BUILTIN_LIBRARY"],
    deps = [
        "//:fildesh_lib",
        "//:fildesh_tool_lib",
    ],
)

fildesh_test(
    name = "transpose_tab_test",
    srcs = ["transpose_tab_test.fildesh"],
)

#### ujoin

cc_test(
    name = "ujoin_test",
    srcs = [
        "ujoin_test.c",
        "//src/builtin:ujoin.c",
        "//src/builtin:fildesh_builtin.h",
    ],
    defines = ["UNIT_TESTING"],
    deps = ["//:fildesh_lib", "//:fildesh_tool_lib"],
)
fildesh_test(
    name = "ujoin_misdup_test",
    srcs = ["ujoin_misdup_test.fildesh"],
)

#### void

cc_test(
    name = "void_test",
    args = ["$(location //src/builtin:void)"],
    srcs = ["void_test.c"],
    deps = [
        "//:fildesh_tool_lib",
        "//src/builtin:void",
    ],
)

#### waitdo

cc_test(
    name = "waitdo_test",
    args = ["$(location //src:waitdo)", "$(location //tool:shout)"],
    srcs = ["waitdo_test.c"],
    deps = [
        "//:fildesh_lib",
        "//:fildesh_tool_lib",
    ],
    data = [
        "//src:waitdo",
        "//tool:shout",
    ],
)

#### xargz

fildesh_test(
    name = "xargz_alias_test",
    srcs = ["xargz_alias_test.fildesh"],
    aliases = {"shout": "//tool:shout"},
)

#### xpipe

fildesh_test(
    name = "xpipe_nested_test",
    srcs = ["xpipe_nested_test.fildesh"],
)

#### zec

fildesh_expect_test(
    name = "zec_cat_test",
    srcs = ["zec_cat.fildesh"],
    expect = ":hello_newline.txt",
)

spawn_test(
    name = "zec_nop_test",
    binary = "//src/builtin:zec",
    args = ["/", "/"],
)
