
# There are several tests. Search for:
# - message_sxpb
# - array_content
# - manyof_content

(: message_sxpb Filename .self.opt.sxpb)
(: message_txtpb Filename .self.opt.txtpb)

|< zec / / $(XOF message_sxpb)
|- sxpb2txtpb
|- cmptxt $(XOF message_txtpb)
|> stdout


$(barrier)

(: array_content Str """
; An array of integers.
((my_integers) 1 2 3)

; An array of strings.
((my_strings) "yo" "howdy" "sup")

; An array of 3 messages.
((my_messages)
 (() (i 5))
 (())
 (() (i 5) (f 5.5) (s "hello")))
""")
(: array_expect Str """\
my_strings: ["yo", "howdy", "sup"]
my_integers: [1, 2, 3]
my_messages: [{
  i: 5
}, {
}, {
  f: 5.5e+0
  i: 5
  s: "hello"
}]
""")

$(O expect) oargz -- "${array_expect}"
|< oargz -- "${array_content}"
|- sxpb2txtpb
|- cmp $(XF expect)
|> stdout


$(barrier)

(: manyof_content Str """
((expressions)

 (value true)

 (not (value false))

 ((or) (() (value false)) (() (value true)))
 ((or) (value false) (value true))
 (((or)) false true)

 (((or))
  false
  (((and)) true false)
  (((or)) false false true))
)
""")
(: manyof_expect Str """\
expressions: [{
  value: true
}, {
  not {
    value: false
  }
}, {
  or: [{
    value: false
  }, {
    value: true
  }]
}, {
  or: [{
    value: false
  }, {
    value: true
  }]
}, {
  or: [{
    value: false
  }, {
    value: true
  }]
}, {
  or: [{
    value: false
  }, {
    and: [{
      value: true
    }, {
      value: false
    }]
  }, {
    or: [{
      value: false
    }, {
      value: false
    }, {
      value: true
    }]
  }]
}]
""")

$(O expect) oargz -- "${manyof_expect}"
|< oargz -- "${manyof_content}"
|- sxpb2txtpb
|- cmp $(XF expect)
|> stdout

