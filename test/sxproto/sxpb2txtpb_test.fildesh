
# There are several tests. Search for:
# - scalar_content
# - message_content
# - empty_message_content
# - array_content
# - manyof_content

(: scalar_content Str """
; An integer.
(i 5)
; A float.
(f 5.5)
; A string.
(s "hello")
""")
(: scalar_expect Str """
f: 5.5e+0
i: 5
s: "hello"
""")

$(O expect) oargz -- "${scalar_expect}"
|< oargz -- "${scalar_content}"
|- sxpb2txtpb
|- cmp $(XF expect)
|> stderr


$(barrier)

(: message_content Str """
; A message holding the first 3 fields of the previous example.
(m (i 5) (f 5.5) (s "hello"))
""")
(: message_expect Str """
m {
  f: 5.5e+0
  i: 5
  s: "hello"
}
""")

$(O expect) oargz -- "${message_expect}"
|< oargz -- "${message_content}"
|- sxpb2txtpb
|- cmp $(XF expect)
|> stderr


$(barrier)

(: empty_message_content Str """
; An empty message.
(m)
""")
(: empty_message_expect Str """
m {}
""")

$(O expect) oargz -- "${empty_message_expect}"
|< oargz -- "${empty_message_content}"
|- sxpb2txtpb
|- cmp $(XF expect)
|> stderr


$(barrier)

(: array_content Str """
; An array of integers.
((my_integers) 1 2 3)

; An array of strings.
((my_strings) "yo" "howdy" "sup")

; An array of 3 messages.
((my_messages)
 (() (i 5))
 (())
 (() (i 5) (f 5.5) (s "hello")))
""")
(: array_expect Str """
my_strings: ["yo", "howdy", "sup"]
my_integers: [1, 2, 3]
my_messages: [{
  i: 5
}, {
}, {
  f: 5.5e+0
  i: 5
  s: "hello"
}]
""")

$(O expect) oargz -- "${array_expect}"
|< oargz -- "${array_content}"
|- sxpb2txtpb
|- cmp $(XF expect)
|> stderr


$(barrier)

(: manyof_content Str """
(((expressions))

 (value true)
 true

 (not (value false))

 (or ((values) (() (value false)) (() (value true))))
 (((or)) (value false) (value true))
 (((or)) false true)

 (((or))
  false
  (((and)) true false)
  (((or)) false false true))
)
""")
(: manyof_expect Str """
expressions {values: [{
  value: true
}, {
  value: true
}, {
  not {
    value: false
  }
}, {
  or {
    values: [{
      value: false
    }, {
      value: true
    }]
  }
}, {
  or {values: [{
    value: false
  }, {
    value: true
  }]}
}, {
  or {values: [{
    value: false
  }, {
    value: true
  }]}
}, {
  or {values: [{
    value: false
  }, {
    and {values: [{
      value: true
    }, {
      value: false
    }]}
  }, {
    or {values: [{
      value: false
    }, {
      value: false
    }, {
      value: true
    }]}
  }]}
}]}
""")

$(O expect) oargz -- "${manyof_expect}"
|< oargz -- "${manyof_content}"
|- sxpb2txtpb
|- cmp $(XF expect)
|> stderr

