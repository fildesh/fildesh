load("@rules_license//rules:license.bzl", "license")

package(
    default_applicable_licenses = [":license"],
    default_visibility = ["//visibility:public"],
)
license(
    name = "license",
    license_kinds = ["@rules_license//licenses/spdx:ISC"],
    license_text = "LICENSE",
)
exports_files([
    "LICENSE",
    "MODULE.bazel",
])


alias(
    name = "fildesh",
    actual = "//src/bin:fildesh",
)

# Use //tool:fildespawn instead.
# TODO(#121): Remove in v0.2.0.
alias(
    name = "fildespawn",
    actual = "//tool:fildespawn",
)

alias(
    name = "sxproto_lib",
    actual = "//src/sxproto:sxproto_lib",
)


cc_library(
    name = "fildesh_compat_lib",
    srcs = [
        "//compat:errno.c",
        "//compat:env.c",
        "//compat:fd.c",
        "//compat:fd_exclusive.h",
        "//compat:file.c",
        "//compat:kill.c",
        "//compat:random.c",
        "//compat:sh.c",
        "//compat:string.c",
        "//compat:tmpdir.c",
        "//include/fildesh:fildesh_compat_errno.h",
        "//include/fildesh:fildesh_compat_fd.h",
        "//include/fildesh:fildesh_compat_file.h",
        "//include/fildesh:fildesh_compat_random.h",
        "//include/fildesh:fildesh_compat_sh.h",
        "//include/fildesh:fildesh_compat_string.h",
    ],
    includes = ["include"],
    linkopts = select({
        "@platforms//os:windows": [
            "-DEFAULTLIB:advapi32.lib",  # For RtlGenRandom().
        ],
        "//conditions:default": ["-pthread"],
    }),
)

cc_library(
    name = "fildesh_lib",
    srcs = [
        "//include/fildesh:fildesh.h",
        "//src/lib:alloc.c",
        "//src/lib:array.c",
        "//src/lib:infile.c",
        "//src/lib:instream.c",
        "//src/lib:log.c",
        "//src/lib:mascii.c",
        "//src/lib:mascii.h",
        "//src/lib:outfile.c",
        "//src/lib:outstream.c",
        "//src/lib:string.c",
        "//src/lib/kv:brbtree.c",
        "//src/lib/kv:bstree.c",
        "//src/lib/kv:bstree.h",
        "//src/lib/kv:kv.c",
        "//src/lib/kv:kv.h",
        "//src/lib/kv:kve.c",
        "//src/lib/kv:kve.h",
        "//src/lib/kv:rbtree.c",
        "//src/lib/kv:single_list.c",
    ],
    includes = ["include"],
    deps = [":fildesh_compat_lib"],
)

cc_library(
    name = "fildesh_cc_lib",
    srcs = [
        "//include/fildesh:ifstream.hh",
        "//include/fildesh:ofstream.hh",
    ],
    includes = ["include"],
    deps = [":fildesh_lib"],
)

cc_library(
    name = "fildesh_tool_lib",
    srcs = [
        "//include:fildesh_posix_thread.h",
        "//include:fildesh_tool.h",
        "//tool:pipem.c",
    ],
    includes = ["include"],
    deps = [":fildesh_compat_lib"],
)

