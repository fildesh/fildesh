
default: all

CC = gcc

#CONFIG += wine  # Need to compile windows version of /cx/ for this.
CONFIG += ansi
CONFIG += debug

CxPath = ../cx
BinPath = ../bin
BldPath = lace

ExeList = lace add best-match xpipe void cat1 ssh-all ujoin \
		  godo waitdo execfd echo transpose

ifeq (,$(filter wine,$(CONFIG)))
	ifeq (,$(filter winegcc,$(CONFIG)))
		ExeList += chatty
	endif
endif

Deps := $(ExeList)
ExeList := $(addprefix $(BinPath)/,$(ExeList))
Objs = $(addprefix $(BldPath)/,$(addsuffix .o,$(Deps)))

include $(CxPath)/include.mk

all: $(ExeList)

$(call binexe,lace): $(BldPath)/lace.o \
	$(CxStdObjs) $(addprefix $(CxBldPath)/, bstree.o rbtree.o)
	$(CC) $(CFLAGS) -o $@ $^

$(call binexe,add): $(BldPath)/add.o $(CxStdObjs)
	$(CC) $(CFLAGS) -o $@ $^

$(call binexe,best-match): $(BldPath)/best-match.o $(CxStdObjs)
	$(CC) $(CFLAGS) -o $@ $^

$(call binexe,xpipe): $(BldPath)/xpipe.o \
	$(CxStdObjs) $(addprefix $(CxBldPath)/, ospc.o)
	$(CC) $(CFLAGS) -o $@ $^

$(call binexe,void): $(BldPath)/void.o
	$(CC) $(CFLAGS) -o $@ $^

$(call binexe,cat1): $(BldPath)/cat1.o
	$(CC) $(CFLAGS) -o $@ $^

$(call binexe,ssh-all): $(BldPath)/ssh-all.o \
	$(CxStdObjs) $(addprefix $(CxBldPath)/, ospc.o)
	$(CC) $(CFLAGS) -o $@ $^

$(call binexe,ujoin): $(BldPath)/ujoin.o \
	$(CxStdObjs) $(addprefix $(CxBldPath)/, bstree.o ospc.o rbtree.o)
	$(CC) $(CFLAGS) -o $@ $^

$(call binexe,godo): $(BldPath)/godo.o $(CxStdObjs)
	$(CC) $(CFLAGS) -o $@ $^

$(call binexe,waitdo): $(BldPath)/waitdo.o $(CxStdObjs)
	$(CC) $(CFLAGS) -o $@ $^

$(call binexe,execfd): $(BldPath)/execfd.o $(CxStdObjs)
	$(CC) $(CFLAGS) -o $@ $^

$(call binexe,echo): $(BldPath)/echo.o $(CxStdObjs)
	$(CC) $(CFLAGS) -o $@ $^

$(call binexe,transpose): $(BldPath)/transpose.o $(CxStdObjs)
	$(CC) $(CFLAGS) -o $@ $^

$(call binexe,chatty): $(BldPath)/chatty.o \
	$(CxStdObjs) $(addprefix $(CxBldPath)/, ospc.o)
	$(CC) $(CFLAGS) $^ -o $@ -lrt

$(BldPath)/lace.o: $(BldPath)/lace.c
	$(CC) -c $(CFLAGS) \
		'-DUtilBin="$(abspath $(BinPath))"' \
		$< -o $@

$(BldPath)/chatty.o: $(BldPath)/chatty.c
	$(CC) -c $(filter-out -ansi,$(CFLAGS)) $< -o $@

.PHONY: clean
clean:
	rm -fr $(PfxBldPath)
	rm -f $(ExeList)

