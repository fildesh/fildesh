#!/usr/bin/env fildesh

# Compute the sum from 1 to N  by essentially implementing
# the {seq} tool and calling {add} on all the numbers.
# The following is essentially what's happening.
#
#     echo N  o
#             |      ____
#             |     |    |
#        cat  x  o  x    |
#                |       | # Going up!
#                |       |
#       o  tee   x  o    |
#      /            |    |
#     |   decrement x o  |
#     |                \_|
#     |
#     x tr '\n' ' ' o
#                   |
#           add  o  x
#                |
#        stdout  x


# Initialize the number {N}.
(: N Str "10")

## Begin pipeline.

# Start at {N} and read subsequent values from {pump}.
|< zec / "${N}\n" / -   $(Xv pump)
# Loop until we hit 1.
|- delimend "\n" "1"
|- elastic - $(OF i)
|- zec -paste - / ' -1' /
|- add
#|- elastic - inspect1.txt
|> zec $(O^ pump)

# Sum up all the numbers we encounter in the loop.
|< zec $(X i)
|- replace_string "\n" " "
|- add
|- zec / "The sum of 1 to ${N} is " / -
|> stdout

# Notes.
# - `zec` is `cat` that interprets literal string content between the slashes.
# - `delimend` reads delimited strings until it hits a terminating case.
#   - Equivalent commands:
#     - delimend "\n" "1"
#     - sed --line-buffered -e '/^1$/q'
# - `replace_string` replaces instances of the first stringg with the second one.
#   - Equivalent commands:
#     - replace_string "\n" " "
#     - tr '\n' ' '
